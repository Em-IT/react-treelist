{
  "name": "React Treelist",
  "tagline": "A React treelist component to display data in tree structure.",
  "body": "## Installation\r\n\r\n```sh\r\nnpm install --save react-treelist\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nimport TreeList from 'react-treelist';\r\n\r\n<TreeList\r\n  data={DATA}  \r\n  columns={COLUMNS}\r\n  options={OPTIONS}\r\n  id={'id'}\r\n  parentId={'parentId'}></TreeList>\r\n```\r\n\r\n|Property|Type|Description|\r\n|--------|----|-----------|\r\n|`data`|array|Array of data objects which become rows in the treelist|\r\n|`columns`|array|Array of column configuration options. See [column options](#column-options) for more details.|\r\n|`options`|object|Component level configuration options. See [component options](#component-options) for more details.|\r\n|`id`|string|Data field which uniquely identifies each record|\r\n|`parentId`|string|Data field which identifies the parent row of a record. Data objects with `null` value in this field are treated as top-level parent records|  \r\n\r\nSee `src/js/index.js` for an example.\r\n\r\n## Options\r\n\r\n### Column options\r\n\r\nThe component accepts an array of column objects via the property `columns`. The column objects can accept the following properties.\r\n\r\n|Property name|Type|Required|Description|\r\n|-------------|----|--------|-----------|\r\n|`title`|string|yes|Will be displayed as column header|\r\n|`field`|string|yes|Property in the data object whose value will be displayed in the rows against this column|\r\n|`type`|string|yes|Data type of the values displayed in the column. Required for sorting and applying formatting. Valid values: `number`, `string`, `date`|\r\n|`width`|number|no|Width of the column|\r\n|`expand`|bool|no|Shows the expand or collapse in this column if set to `true`. If this option is not provided, the icons are shown in the first column by default.|\r\n|`class`|string|no|Class name to be added to the cells in the column. Can be used for applying specific styles for the column values|\r\n|`formatter`|function|no|If provided, the return value of this function will be dispayed in the rows for this column. The value of `field` from the data object will be passed as an argument.\r\n\r\n### Component options\r\n\r\nComponent level options are accepted via the property, `options`.\r\n\r\n|Property name|Type|Required|Description|\r\n|-------------|----|--------|-----------|\r\n|`expandAll`|bool|no|If set to `true` will expand all rows by default when the component is rendered for the first time. Defaults to `false`.\r\n|`height`|number|no|Height of the treelist body. When not provided, the component will expand to show all available rows.|\r\n|`minimumColWidth`|number|no|Minimum width of columns. Columns can't be resized below this value.\r\n\r\n## Contributing\r\n\r\n1. Fork it!\r\n2. Create your feature branch: `git checkout -b my-new-feature`\r\n3. Commit your changes: `git commit -am 'Add some feature'`\r\n4. Push to the branch: `git push origin my-new-feature`\r\n5. Submit a pull request\r\n\r\n## License\r\n\r\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}